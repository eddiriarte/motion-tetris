{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./projekt/styles/tetris.scss?7969","webpack:///./projekt/styles/tetris.scss","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./projekt/skripte/Figur.js","webpack:///./projekt/skripte/Tetromino.js","webpack:///./projekt/skripte/Utils.js","webpack:///./projekt/skripte/SpielHelfer.js","webpack:///./projekt/skripte/index.js","webpack:///./projekt/skripte/Tetris.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","options","hmr","transform","insertInto","undefined","locals","push","useSourceMap","list","toString","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","stylesInDom","isOldIE","fn","memo","apply","arguments","memoize","window","document","all","atob","getElement","target","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","Figur","O","muster","I","L","J","S","Z","T","skripte_Tetromino","[object Object]","zeile","spalte","laenge","gedreht","neueZeile","zelle","reverse","welt","tetro","reduce","erlaubt","indexY","naechsteZeileIndex","nurLeereZellen","every","_erlaubt","indexX","spalteAufWelt","istNichtAuf","weltContainerStarten","containerId","prefix","weltContainer","getElementById","innerHTML","buffer","weltErzeugen","zeilen","spalten","y","zellen","x","zufaelligesTetromino","figuren","Math","floor","random","tetroAufWeltSetzen","offsetY","offsetX","tetroZelle","findeVolleZeilen","liste","some","loscheZeile","breite","neueWelt","Array","fill","skripte_SpielHelfer","klasse","kannRunterRuecken","position","matrix","skripte_spiel","assign","hoehe","naechstesTetro","naechsteTetroId","punkteId","zeilenTotalId","container","showDialog","started","score","zeilenTotal","aktualisieren","naechstesTetroAnzeigen","zeitSchleife","setTimeout","spielZeitSchleife","levelGeschwindigkeit","keyLauscher","keyEventsBehandeln","addEventListener","findeZelle","className","findeBlockKlasse","tetroNachUntenBewegen","stopZeitSchleife","spiel","clearTimeout","kannNachUnten","tetroAblegen","kannNachLinks","kannNachRechts","tetroNachUntenSchieben","gameOver","volleZeilenLoeschen","naechsteTetroContainer","event","keyCode","rechtsDrehen","tetroNachLinksBewegen","tetroNachRechtsBewegen","console","log","geste","direction","tetris","volleZeilen","scoreErhoehen","punkte","abs","innerText","substr","message","action","removeEventListener","warn"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tetris.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tetris.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tetris.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@font-face {\\n  font-family: 'Karmatic Arcade';\\n  src: url(\\\"/KarmaticArcade.woff2\\\") format(\\\"woff2\\\"), url(\\\"/KarmaticArcade.woff\\\") format(\\\"woff\\\"), url(\\\"/KarmaticArcade.ttf\\\") format(\\\"truetype\\\"), url(\\\"/KarmaticArcade.svg#KarmaticArcade\\\") format(\\\"svg\\\");\\n  font-weight: normal;\\n  font-style: normal; }\\n\\nbody {\\n  background: #eee;\\n  font-family: 'Karmatic Arcade'; }\\n  body.debug * {\\n    outline: 1px solid red; }\\n\\nh2 {\\n  margin-top: 0;\\n  margin-bottom: 10px;\\n  color: #95a5a6;\\n  font-size: 2.2em; }\\n  h2 .punkte {\\n    color: #34495e; }\\n\\n#seite {\\n  width: 90%;\\n  margin: 60px auto; }\\n\\n#tetris {\\n  background: #34495e;\\n  border: 10px solid #95a5a6;\\n  width: auto;\\n  display: inline-block;\\n  position: relative; }\\n  #tetris .modal {\\n    color: #ecf0f1;\\n    position: absolute;\\n    padding: 30px 60px;\\n    background: #34495e;\\n    width: 200px;\\n    text-align: center;\\n    top: 80px;\\n    margin-left: 50%;\\n    transform: translateX(-50%);\\n    box-shadow: 1px 1px 2px 3px #7f8c8d; }\\n    #tetris .modal h3 {\\n      margin-top: 0; }\\n    #tetris .modal button {\\n      outline: 0;\\n      border: 0;\\n      color: #2c3e50;\\n      background-color: #ecf0f1;\\n      padding: 8px 16px;\\n      font-size: 1.3em; }\\n\\n#menu {\\n  display: inline-block;\\n  vertical-align: top;\\n  width: 400px;\\n  margin-left: 30px; }\\n\\n#vorschau, #gest {\\n  background: #34495e;\\n  border: 10px solid #95a5a6;\\n  display: inline-block;\\n  position: relative;\\n  margin: auto;\\n  width: auto;\\n  margin-top: 16px; }\\n\\n#gest {\\n  width: 480px;\\n  height: 320px; }\\n\\n/****************************************************************/\\n/**    TETROMINOS                                              **/\\n/****************************************************************/\\n.tetro {\\n  display: inline-grid;\\n  outline-offset: inherit;\\n  border-width: 10px;\\n  border-style: inset;\\n  border-color: #34495E;\\n  width: 20px;\\n  height: 20px;\\n  margin: 0;\\n  opacity: 0.3; }\\n  .tetro.filled {\\n    border-style: ridge;\\n    opacity: 1; }\\n  .tetro.J {\\n    background-color: #f3a683;\\n    border-color: #f19066; }\\n  .tetro.I {\\n    background-color: #feca57;\\n    border-color: #feca57; }\\n  .tetro.L {\\n    background-color: #c8d6e5;\\n    border-color: #c8d6e5; }\\n  .tetro.O {\\n    background-color: #ff9ff3;\\n    border-color: #ff9ff3; }\\n  .tetro.S {\\n    background-color: #1dd1a1;\\n    border-color: #1dd1a1; }\\n  .tetro.T {\\n    background-color: #ff6b6b;\\n    border-color: #ff6b6b; }\\n  .tetro.Z {\\n    background-color: #48dbfb;\\n    border-color: #48dbfb; }\\n  .tetro.complete {\\n    background-color: #fff;\\n    border-color: #bbb; }\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","const O = {\n    value: 1,\n    muster: [\n        [0, 0, 0, 0],\n        [0, 1, 1, 0],\n        [0, 1, 1, 0],\n        [0, 0, 0, 0]\n    ]\n};\n\nconst I = {\n    value: 2,\n    muster: [\n        [0, 2, 0, 0],\n        [0, 2, 0, 0],\n        [0, 2, 0, 0],\n        [0, 2, 0, 0]\n    ]\n};\n\nconst L = {\n    value: 3,\n    muster: [\n        [0, 3, 0],\n        [0, 3, 0],\n        [0, 3, 3]\n    ]\n};\n\nconst J = {\n    value: 4,\n    muster: [\n        [0, 4, 0],\n        [0, 4, 0],\n        [4, 4, 0]\n    ]\n};\n\nconst S = {\n    value: 5,\n    muster: [\n        [0, 0, 0],\n        [0, 5, 5],\n        [5, 5, 0]\n    ]\n};\n\nconst Z = {\n    value: 6,\n    muster: [\n        [0, 0, 0],\n        [6, 6, 0],\n        [0, 6, 6]\n    ]\n};\n\nconst T = {\n    value: 7,\n    muster: [\n        [0, 0, 0],\n        [7, 7, 7],\n        [0, 7, 0]\n    ]\n};\n\nexport default {\n    O,\n    I,\n    L,\n    J,\n    S,\n    Z,\n    T\n};\n","class Tetromino {\n\n    constructor(zeile, spalte, muster) {\n        this.zeile = zeile;\n        this.spalte = spalte;\n        this.muster = muster;\n    }\n\n    linksDrehen() {\n        const laenge = this.muster.length;\n        const gedreht = [];\n\n        for(let zeile = 0; zeile < laenge; zeile++){\n            const neueZeile = [];\n            for(let spalte = 0; spalte < laenge; spalte++){\n                const zelle = this.muster[spalte][zeile];\n                neueZeile.push(zelle);\n            };\n            gedreht.push(neueZeile);\n        };\n\n        this.muster = gedreht.reverse();\n    }\n\n    rechtsDrehen() {\n        const laenge = this.muster.length;\n        let gedreht = [];\n\n        for(let zeile = 0; zeile < laenge; zeile++){\n            const neueZeile = [];\n            for (let spalte = 0; spalte < laenge; spalte++) {\n                const zelle = this.muster[spalte][zeile];\n                neueZeile.push(zelle);\n            }\n            gedreht.push(neueZeile.reverse());\n        }\n\n        this.muster = gedreht;\n    }\n\n    kannNachUnten(welt) {\n        const tetro = this;\n        return this.muster.reduce((erlaubt, zeile, indexY) => {\n            const naechsteZeileIndex = (tetro.zeile + indexY + 1);\n            const nurLeereZellen = zeile.every((spalte) => spalte === 0);\n\n            if (naechsteZeileIndex >= welt.length && !nurLeereZellen) {\n                return false;\n            }\n            \n            if (naechsteZeileIndex < 0 || nurLeereZellen) {\n                return erlaubt;\n            }\n\n            return zeile.reduce((_erlaubt, spalte, indexX) => {\n                const spalteAufWelt = (tetro.spalte + indexX);\n                if (spalteAufWelt < 0 || spalteAufWelt >= welt[0].length) {\n                    return _erlaubt;\n                }\n\n                const zelle = welt[naechsteZeileIndex][spalteAufWelt]; \n                return _erlaubt && (spalte * zelle) === 0;\n            }, erlaubt);\n        }, true);\n    }\n\n    kannNachRechts(welt) {\n        const tetro = this;\n        return this.muster.reduce((erlaubt, zeile, indexY) => {\n            return zeile.reduce((_erlaubt, spalte, indexX) => {\n                if (spalte === 0 || (tetro.zeile + indexY) <= 0 ) {\n                    return _erlaubt;\n                }\n\n                if ((tetro.spalte + indexX) >= (welt[0].length - 1)) {\n                    return false;\n                }\n\n                const zelle = welt[tetro.zeile + indexY][tetro.spalte + indexX + 1];\n                return _erlaubt && zelle === 0;\n            }, erlaubt);\n        }, true);\n    }\n\n    kannNachLinks(welt) {\n        const tetro = this;\n        return this.muster.reduce((erlaubt, zeile, indexY) => {\n            return zeile.reduce((_erlaubt, spalte, indexX) => {\n                if (spalte === 0 || (tetro.zeile + indexY) <= 0) {\n                    return _erlaubt;\n                }\n\n                if ((tetro.spalte + indexX) <= 0) {\n                    return false;\n                }\n\n                const zelle = welt[tetro.zeile + indexY][tetro.spalte + indexX - 1];\n                return _erlaubt && zelle === 0;\n            }, erlaubt);\n        }, true);\n    }\n\n    istAuf(zeile, spalte) {\n        return !this.istNichtAuf(zeile, spalte);\n    }\n\n    istNichtAuf(zeile, spalte) {\n        const indexY = zeile - this.zeile;\n        const indexX = spalte - this.spalte;\n    \n        return indexY < 0\n            || zeile >= (this.zeile + this.muster.length)\n            || indexX < 0\n            || spalte >=  (this.spalte + this.muster.length);\n    }\n\n    findeZelle(zeile, spalte) {\n        if (this.istNichtAuf(zeile, spalte)) {\n            return null;\n        }\n        \n        return this.muster[zeile - this.zeile][spalte - this.spalte];\n    }\n}\n\nexport default Tetromino;","import Figur from './Figur';\nimport Tetromino from './Tetromino';\n\nconst weltContainerStarten = (containerId, welt, prefix = 'welt_') => {\n    const weltContainer = document.getElementById(containerId);\n    weltContainer.innerHTML = welt.map((zeile, indexY) => {\n        return zeile.reduce((buffer, spalte, indexX) => {\n            return buffer +  '<div id=\"' + prefix + indexY + '_' + indexX + '\" data-tetro=\"' + spalte + '\" class=\"tetro\"></div>';\n        }, '');\n    }).join('<br>');\n\n    return weltContainer;\n};\n\nconst weltErzeugen = (zeilen, spalten) => {\n    const welt = [];\n    for (let y = 0; y < zeilen; y++) {\n        const zellen = [];\n        for (let x = 0; x < spalten; x++) {\n            zellen.push(0);\n        }\n        welt.push(zellen);\n    }\n\n    return welt;\n};\n\nconst zufaelligesTetromino = () => {\n    const figuren = Object.keys(Figur);\n    const name = figuren[Math.floor(Math.random() * figuren.length)];\n    const x = 3;\n    const y = (Figur[name].muster.length * -1);\n\n    return new Tetromino(y, 3, Figur[name].muster);\n};\n\nconst tetroAufWeltSetzen = ({ muster, zeile, spalte }, welt) => {\n    return welt.map((spalten, indexY) => {\n        const offsetY = indexY - zeile;\n        return [...spalten].map((zelle, indexX) => {\n            const offsetX = indexX - spalte;\n            if (offsetY < 0\n                || offsetY >= muster.length\n                || offsetX < 0\n                || offsetX >= muster.length) {\n                return zelle;\n            }\n\n            const tetroZelle = muster[offsetY][offsetX];\n            return tetroZelle !== 0 ? tetroZelle : zelle;\n        });\n    });\n}\n\nconst findeVolleZeilen = (welt) => {\n    return welt.reduce((liste, zeile, index) => {\n        if (zeile.some((spalte) => spalte === 0)) {\n            return liste;\n        }\n\n        return [...liste, index];\n    }, []);\n}\n\nconst loscheZeile = (welt, zeile) => {\n    const breite = welt[0].length;\n    const neueWelt = [...welt];\n    const neueZeile = (new Array(breite)).fill(0);\n\n    neueWelt.splice(zeile, 1);\n    return [neueZeile, ...neueWelt];\n};\n\nexport {\n    weltErzeugen,\n    weltContainerStarten,\n    zufaelligesTetromino,\n    tetroAufWeltSetzen,\n    findeVolleZeilen,\n    loscheZeile\n};\n","import Figur from './Figur';\nimport Tetromino from './Tetromino';\n\nclass SpielHelfer {\n    static findeBlockKlasse(zelle) {\n        let klasse = 'tetro';\n\n        switch (zelle) {\n            case Figur.I.value:\n                klasse += ' filled I';\n                break;\n            case Figur.J.value:\n                klasse += ' filled J';\n                break;\n            case Figur.L.value:\n                klasse += ' filled L';\n                break;\n            case Figur.O.value:\n                klasse += ' filled O';\n                break;\n            case Figur.S.value:\n                klasse += ' filled S';\n                break;\n            case Figur.Z.value:\n                klasse += ' filled Z';\n                break;\n            case Figur.T.value:\n                klasse += ' filled T';\n                break;\n            case 10:\n                klasse += ' filled complete';\n                break;\n            default:\n                break;\n        }\n\n        return klasse;\n    }\n\n    static kannBlockRunterRuecken(welt) {\n        let kannRunterRuecken = true;\n\n        for (let zeile = (welt.length-1); zeile >= 0; zeile--) {\n            for (let spalte = 0; spalte < welt[0].length; spalte++) {\n                if (zeile > 0 && welt[zeile-1][spalte] < 10) {\n                    continue;\n                }\n\n                kannRunterRuecken = false;\n            }\n        }\n\n        return kannRunterRuecken;\n    }\n\n    static naechstesTetromino() {\n        const figuren = Object.keys(Figur);\n        const name = figuren[Math.floor(Math.random() * figuren.length)];\n        const position = {\n            x: 3,\n            y: (Figur[name].matrix.length * -1)\n        };\n\n        return new Tetromino(position, Figur[name].matrix);\n    }\n}\n\nexport default SpielHelfer;","import '../styles/tetris.scss';\nimport Tetris from './Tetris';\n\nconst spiel = new Tetris();\n\nwindow.spiel = spiel;","import {\n    weltErzeugen,\n    weltContainerStarten,\n    zufaelligesTetromino,\n    tetroAufWeltSetzen,\n    findeVolleZeilen,\n    loscheZeile\n} from './Utils';\n// import {\n//     gestenLauschStarten,\n//     gestenLauschBeenden\n// } from './GestenErkennung';\nimport SpielHelfer from './SpielHelfer';\n\nclass Tetris {\n\n    constructor(options = {}) {\n        Object.assign(this, {\n            hoehe: 16,\n            breite: 10,\n            welt: null,\n            tetro: null,\n            naechstesTetro: null,\n            containerId: 'tetris',\n            naechsteTetroId: 'vorschau',\n            punkteId: 'punkte',\n            zeilenTotalId: 'zeilen-total'\n        }, options);\n        this.welt = weltErzeugen(this.hoehe, this.breite);\n        this.container = weltContainerStarten(this.containerId, this.welt);\n        this.showDialog('Willkommen', '<button onclick=\"spiel.starten()\">spielen!</button>');\n    }\n\n    starten() {\n        this.started = true;\n        this.score = 0;\n        this.zeilenTotal = 0;\n        this.welt = weltErzeugen(this.hoehe, this.breite);\n        this.container = weltContainerStarten(this.containerId, this.welt);\n        this.tetro = zufaelligesTetromino();\n        this.naechstesTetro = zufaelligesTetromino();\n\n        this.aktualisieren();\n        this.naechstesTetroAnzeigen();\n        this.zeitSchleife = setTimeout(this.spielZeitSchleife.bind(this), this.levelGeschwindigkeit());\n        this.keyLauscher = this.keyEventsBehandeln.bind(this);\n        document.addEventListener('keyup', this.keyLauscher);\n        // gestenLauschStarten(this.gestenLauscher.bind(this));\n    }\n\n    aktualisieren() {\n        const tetro = this.tetro.muster;\n        for (let zeile = 0; zeile < this.hoehe; zeile++) {\n            for (let spalte = 0; spalte < this.breite; spalte++) {\n\n                const zelle = this.tetro.findeZelle(zeile, spalte);\n                const block = document.getElementById('welt_' + zeile + '_' + spalte);\n                block.className = SpielHelfer.findeBlockKlasse(\n                    (zelle && zelle !== 0) ? zelle : this.welt[zeile][spalte]\n                );\n\n            }\n        }\n    }\n\n    spielZeitSchleife() {\n        if (!this.started) { return; }\n        this.tetroNachUntenBewegen();\n        this.aktualisieren();\n        this.stopZeitSchleife();\n        this.zeitSchleife = setTimeout(this.spielZeitSchleife.bind(this), spiel.levelGeschwindigkeit());\n    }\n\n    stopZeitSchleife() {\n        if (this.zeitSchleife) {\n            this.zeitSchleife = clearTimeout(this.zeitSchleife);\n        }\n    }\n\n    tetroNachUntenBewegen() {\n        if (this.tetro.kannNachUnten(this.welt)) {\n            this.tetro.zeile++;\n            return;\n        }\n\n        this.tetroAblegen();\n    }\n\n    tetroNachLinksBewegen() {\n        if (this.tetro.kannNachLinks(this.welt)) {\n            this.tetro.spalte--;\n        }\n    }\n\n    tetroNachRechtsBewegen() {\n        if (this.tetro.kannNachRechts(this.welt)) {\n            this.tetro.spalte++;\n        }\n    }\n\n    tetroNachUntenSchieben() {\n        this.stopZeitSchleife();\n        if (this.tetro.kannNachUnten(this.welt)) {\n            this.tetro.zeile++;\n            setTimeout(this.tetroNachUntenSchieben.bind(this), 20);\n            this.aktualisieren();\n        } else {\n            this.tetroAblegen();\n            this.spielZeitSchleife();\n        }\n    }\n\n    tetroAblegen() {\n        if (this.tetro.zeile <= 0) {\n            this.gameOver();\n            return;\n        }\n\n        this.welt = tetroAufWeltSetzen(this.tetro, [...this.welt]);\n        this.volleZeilenLoeschen();\n        \n        this.aktualisieren();\n\n        this.tetro = this.naechstesTetro;\n        this.naechstesTetro = zufaelligesTetromino();\n        this.naechstesTetroAnzeigen();\n    }\n\n    naechstesTetroAnzeigen() {\n        this.naechsteTetroContainer = weltContainerStarten(this.naechsteTetroId, weltErzeugen(4, 4), 'vorschau_');\n        this.naechstesTetro.muster.forEach((zeile, indexY) => {\n            zeile.forEach((zelle, indexX) => {\n                const block = document.getElementById('vorschau_' + indexY + '_' + indexX);\n                block.className = SpielHelfer.findeBlockKlasse(zelle);\n            });\n        });\n    }\n\n    levelGeschwindigkeit() {\n        return 500;\n    }\n\n    keyEventsBehandeln(event) {\n        switch(event.keyCode) {\n            case 32:\n            case 38:\n                this.tetro.rechtsDrehen();\n                this.aktualisieren();\n                break;\n            case 37:\n                this.tetroNachLinksBewegen();\n                this.aktualisieren();\n                break;\n            case 39:\n                this.tetroNachRechtsBewegen();\n                this.aktualisieren()\n                break;\n            case 40:\n                this.tetroNachUntenSchieben();\n                break;\n            case 27:\n                this.gameOver();\n                break;\n            default:\n                console.log(event.keyCode);\n        }\n    }\n\n    gestenLauscher(geste) {\n        switch(geste.direction) {\n            case 'Long up':\n            case 'Up':\n                this.tetro.rechtsDrehen();\n                this.aktualisieren();\n                break;\n            case 'Long left':\n            case 'Left':\n                this.tetroNachLinksBewegen();\n                this.aktualisieren();\n                break;\n            case 'Long right':\n            case 'Right':\n                this.tetroNachRechtsBewegen();\n                this.aktualisieren()\n                break;\n            case 'Long down':\n            case 'Down':\n                this.tetroNachUntenSchieben();\n                break;\n            case 27:\n                this.gameOver();\n                break;\n            default:\n                console.log(geste.direction);\n        }\n    }\n\n    volleZeilenLoeschen() {\n        const tetris = this;\n        const volleZeilen = findeVolleZeilen(this.welt);\n\n        this.scoreErhoehen(volleZeilen.length);\n\n        if (volleZeilen.length < 1) {\n            return;\n        }\n\n        volleZeilen.forEach((index) => {\n            tetris.welt.splice(index, 1, (new Array(tetris.breite)).fill(10));\n            tetris.aktualisieren();\n\n            setTimeout(() => {\n                tetris.welt = loscheZeile([...tetris.welt], index);\n                tetris.aktualisieren();\n            }, 50);\n        });\n    }\n\n    scoreErhoehen(volleZeilen) {\n        const punkte = volleZeilen > 0 ? (100 * volleZeilen) : 10\n        this.score += Math.abs(punkte);\n        this.zeilenTotal += Math.abs(volleZeilen);\n\n        document\n            .getElementById(this.punkteId)\n            .innerText = `00000000${this.score}`.substr(-7);\n        \n        document\n            .getElementById(this.zeilenTotalId)\n            .innerText = `00000000${this.zeilenTotal}`.substr(-7);\n    }\n\n    showDialog(message, action) {\n        this.container.innerHTML += `\n            <div class=\"modal\">\n                <h3>${message}</h3>\n                ${ action ? action : '' }\n            </div>`;\n    }\n\n    gameOver() {\n        if (!this.started) {\n            console.warn('Spiel kann nicht beendet werden bevor es gestartet wurde.');\n            return;\n        }\n\n        this.started = false;\n        this.showDialog('Game Over', '<button onclick=\"spiel.starten()\">Noch mal spielen!</button>');\n        this.stopZeitSchleife();\n        document.removeEventListener('keyup', this.keyLauscher);\n        // gestenLauschBeenden();\n    }\n}\n\nexport default Tetris;\n"],"sourceRoot":""}